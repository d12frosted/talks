* Functional Forkshop: Part 2 - Monoids (Scala edition)

This is the second part of the Functional Forkshop - a series of introduction
workshops to the functional programming.

In this workshop we cover the following topics:

- Value constructors.
- Type constructors.
- Arity.
- Higher-order functions.
- Higher-order types.
- Functors.
- Applicative Functors.

Afterwards we solve two problems:

- Parsing combinators.
- Validation.

The tasks are located in a separate repository:
[[https://github.com/wax-org/fforkshop-functors-scala][wax-org/fforkshop-functors-scala]].

Authors: [[https://github.com/valentynv][Valentyn Vakatsiienko]] and [[https://d12frosted.io][Boris Buliga]].

** References

- http://www.staff.city.ac.uk/~ross/papers/Applicative.pdf
- Röjemo, Niklas. (1995). Garbage collection and memory efficiency. Ph.D.
  thesis, Chalmers.
- Swierstra, S. Doaitse, & Duponcheel, Luc. (1996). Deterministic,
  error-correcting combinator parsers. Pages 184–207 of: Launchbury, John,
  Meijer, Erik, & Sheard, Tim (eds), Advanced functional programming. LNCS,
  vol. 1129. Springer.
- https://ttic.uchicago.edu/~dreyer/course/papers/wadler.pdf
- https://www.schoolofhaskell.com/user/edwardk/snippets/fmap
- https://duplode.github.io/posts/idempotent-applicatives-parametricity-and-a-puzzle.html
- http://blog.ezyang.com/2012/08/applicative-functors/
